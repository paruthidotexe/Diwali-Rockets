local min_x = 0
local max_x = 720
local min_y = 0
local max_y = 1280

local prev_block_time = 0
local next_block_time = 12

color_r = vmath.vector4(1, 0, 0, 1)
color_g = vmath.vector4(0, 1, 0, 1)
color_b = vmath.vector4(0, 0, 1, 1)
color_y = vmath.vector4(1, 1, 0, 1)
cur_color = vmath.vector4(0, 0, 1, 1)


function init(self)
	msg.post("@render:", "use_fixed_fit_projection")
	--msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1, zoom = 2 })
	x, y, w, h = defos.get_window_size()
	defos.set_window_size(x, y, 540, 960)
	print(window.get_size())
	--msg.post("/audio#bg_music", "play_sound")
	--profiler.enable_ui(true)
	prev_block_time = next_block_time
end

function final(self)
	-- is this needed
	factory.unload("/level#blocks_number")
end

function update(self, dt)
	prev_block_time = prev_block_time + dt
	if prev_block_time > next_block_time then
		prev_block_time = 0
		create_blocks()
	end
end

function create_blocks()
	local player_pos = go.get_position("/player")
	player_pos.x = math.random(min_x, max_x)
	player_pos.y = math.random(min_y +  max_y / 2, max_y)
	local props = {health = math.random(1, 10)}
	player_pos.x = 128
	factory.create("/level#blocks_number", player_pos, null, props)
	player_pos.x = 256
	props = {health = math.random(1, 10)}
	factory.create("/level#blocks_number", player_pos, null, props)
	player_pos.x = 384
	props = {health = math.random(1, 10)}
	factory.create("/level#blocks_number", player_pos, null, props)
	player_pos.x = 512
	props = {health = math.random(1, 10)}
	factory.create("/level#blocks_number", player_pos, null, props)
	player_pos.x = 640
	props = {health = math.random(1, 10)}
	factory.create("/level#blocks_number", player_pos, null, props)
end


function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
